{"version":3,"sources":["components/LoginForm/LoginForm.module.css","components/ChatForm/ChatForm.module.css","components/Container/Container.module.css","components/Chat/Chat.module.css","components/ChatWindow/ChatWindow.module.css","components/Container/Container.jsx","components/ChatWindow/ChatWindow.jsx","components/ChatForm/ChatForm.jsx","components/LoginForm/LoginForm.jsx","components/Chat/Chat.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ChatWindow","messages","ListGroup","chatWindow","map","mess","Item","event","username","message","id","ChatForm","value","setValue","sendMessage","Form","chatForm","Control","chatInput","onChange","e","target","type","placeholder","Button","variant","onClick","LoginForm","setUsername","connect","loginForm","Group","controlId","input","Text","text","Chat","useState","setMessages","socket","useRef","connected","setConnected","setUserID","current","WebSocket","onopen","console","log","shortid","generate","send","JSON","stringify","onmessage","parse","data","prev","onclose","onerror","chat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c869a18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__7qgTG\",\"text\":\"LoginForm_text__UOe3S\",\"input\":\"LoginForm_input__3eacb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatForm\":\"ChatForm_chatForm__28JAT\",\"chatInput\":\"ChatForm_chatInput__27x-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__MgrPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__B-gOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWindow\":\"ChatWindow_chatWindow__3fST1\"};","import s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import s from './ChatWindow.module.css';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst ChatWindow = ({ messages }) => {\r\n  return (\r\n    <ListGroup className={s.chatWindow}>\r\n      {messages.map(mess => (\r\n        <ListGroup.Item key={mess.id}>\r\n          {mess.event === 'connection' ? (\r\n            <p>Пользователь {mess.username} подключился</p>\r\n          ) : (\r\n            <p>\r\n              {mess.username}: {mess.message}\r\n            </p>\r\n          )}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import s from './ChatForm.module.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst ChatForm = ({ value, setValue, sendMessage }) => {\r\n  return (\r\n    <Form className={s.chatForm}>\r\n      <Form.Control\r\n        className={s.chatInput}\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Введите сообщение\"\r\n      />\r\n\r\n      <Button variant=\"success\" type=\"button\" onClick={sendMessage}>\r\n        Отправить\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import s from './LoginForm.module.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst LoginForm = ({ username, setUsername, connect }) => {\r\n  return (\r\n    <Form className={s.loginForm}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          placeholder=\"Введите имя\"\r\n        />\r\n\r\n        <Form.Text className={s.text}>\r\n          Заполните форму для подключения к чату\r\n        </Form.Text>\r\n\r\n        <Button variant=\"success\" type=\"button\" onClick={connect}>\r\n          Войти\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useRef, useState } from 'react';\r\nimport s from './Chat.module.css';\r\nimport shortid from 'shortid';\r\nimport ChatWindow from '../ChatWindow';\r\nimport ChatForm from '../ChatForm';\r\nimport LoginForm from '../LoginForm';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [value, setValue] = useState('');\r\n  const socket = useRef();\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [userID, setUserID] = useState('');\r\n\r\n  const connect = () => {\r\n    socket.current = new WebSocket('ws://localhost:5000');\r\n\r\n    socket.current.onopen = () => {\r\n      setConnected(true);\r\n      console.log('Подключение установлено!');\r\n\r\n      const message = {\r\n        id: shortid.generate(),\r\n        event: 'connection',\r\n        username,\r\n      };\r\n\r\n      socket.current.send(JSON.stringify(message));\r\n      setUserID(message.id);\r\n    };\r\n\r\n    socket.current.onmessage = event => {\r\n      const message = JSON.parse(event.data);\r\n      setMessages(prev => [...prev, message]);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      // console.log('Произошло отключение');\r\n    };\r\n\r\n    socket.current.onerror = () => {\r\n      console.log('Произошла ошибка');\r\n    };\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    const message = {\r\n      id: shortid.generate(),\r\n      event: 'message',\r\n      message: value,\r\n      username,\r\n    };\r\n\r\n    socket.current.send(JSON.stringify(message));\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!connected && (\r\n        <LoginForm\r\n          username={username}\r\n          setUsername={setUsername}\r\n          connect={connect}\r\n        />\r\n      )}\r\n\r\n      {connected && (\r\n        <div className={s.chat}>\r\n          <ChatWindow messages={messages} />\r\n          <ChatForm\r\n            value={value}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import Container from '../Container';\nimport Chat from '../Chat';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Container>\n      <Chat />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}