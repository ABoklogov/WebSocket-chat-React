{"version":3,"sources":["components/Chat/Chat.module.css","components/LoginForm/LoginForm.module.css","components/ChatForm/ChatForm.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/ChatWindow/ChatWindow.jsx","components/ChatForm/ChatForm.jsx","components/LoginForm/LoginForm.jsx","components/Chat/Chat.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ChatWindow","messages","username","chatWindow","useRef","useEffect","current","scrollTo","top","behavior","ref","map","mess","messageClassName","messagePosition","event","message","id","ChatForm","value","setValue","sendMessage","sendMessageEnter","Form","chatForm","Control","chatInput","type","onChange","e","target","onKeyPress","placeholder","Button","variant","onClick","LoginForm","setUsername","connect","connectEnterKey","loginForm","Group","controlId","input","Text","text","Chat","useState","setMessages","socket","connected","setConnected","REACT_APP_HOST","process","localMessages","localStorage","getItem","JSON","parse","localName","localConnected","WebSocket","onmessage","data","prev","trim","onopen","saveLocalConnected","saveLocalName","console","log","shortid","generate","send","stringify","onclose","onerror","toast","error","theme","saveLocalMessages","parseMessages","push","setItem","name","chatContainer","key","preventDefault","chat","OverlayTrigger","overlay","Tooltip","placement","delay","show","hide","CloseButton","closeButton","clear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,2B,mBCAlGD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,8B,mBCApED,EAAOC,QAAU,CAAC,UAAY,+B,qJCKfC,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,yFCgCxBI,G,MAhCI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxBC,EAAaC,mBAQnB,OAPAC,qBAAU,WACRF,EAAWG,QAAQC,SAAS,CAC1BC,IAAK,KACLC,SAAU,cAKZ,oBAAIZ,UAAU,aAAaa,IAAKP,EAAhC,SACGF,EAASU,KAAI,SAAAC,GACZ,IAAMC,EAAmBD,EAAKV,WAAaA,EAAW,MAAQ,OACxDY,EAAuC,QAArBD,GAA8B,QAEtD,OACE,oBAAIhB,UAAU,OAAd,SACkB,eAAfe,EAAKG,MACJ,0GAAiBH,EAAKV,SAAtB,yEAEA,oBAAGL,UAAS,UAAKiB,GAAjB,UACGF,EAAKV,SADR,QAEE,sBAAML,UAAS,UAAKgB,GAApB,SAAyCD,EAAKI,cAN1BJ,EAAKK,W,iCCG1BC,EAnBE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,iBAChD,OACE,eAACC,EAAA,EAAD,CAAM1B,UAAWC,IAAE0B,SAAnB,UACE,cAACD,EAAA,EAAKE,QAAN,CACE5B,UAAWC,IAAE4B,UACbC,KAAK,OACLR,MAAOA,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOX,QACjCY,WAAYT,EACZU,YAAY,sGAGd,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,QAASd,EAAjD,wE,iBCaSe,EAzBG,SAAC,GAAyD,IAAvDlC,EAAsD,EAAtDA,SAAUmC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACnD,OACE,cAAChB,EAAA,EAAD,CAAM1B,UAAWC,IAAE0C,UAAnB,SACE,eAACjB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACnB,EAAA,EAAKE,QAAN,CACE5B,UAAWC,IAAE6C,MACbhB,KAAK,OACLR,MAAOjB,EACP0B,SAAU,SAAAC,GAAC,OAAIQ,EAAYR,EAAEC,OAAOX,QACpCY,WAAYQ,EACZP,YAAY,kEAGd,cAACT,EAAA,EAAKqB,KAAN,CAAW/C,UAAWC,IAAE+C,KAAxB,yNAIA,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,QAASG,EAAjD,kDC6KOQ,EAtLF,WACX,MAAgCC,mBAAS,IAAzC,mBAAO9C,EAAP,KAAiB+C,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACM6B,EAAS7C,mBACf,EAAkC2C,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAO7C,EAAP,KAAiBmC,EAAjB,KACQe,EAAmBC,4CAE3BhD,qBAAU,WACR,IAAMiD,EAAgBC,aAAaC,QAAQ,YAC3C,GAAKF,EAAL,CAGA,IAAMtC,EAAUyC,KAAKC,MAAMJ,GAC3BN,EAAY,YAAIhC,OACf,IAEHX,qBAAU,WACR,IAAMsD,EAAYJ,aAAaC,QAAQ,QAClCG,GAGLtB,EAAYoB,KAAKC,MAAMC,MACtB,IAEHtD,qBAAU,WACR,IAAMuD,EAAiBL,aAAaC,QAAQ,aACrB,OAAnBI,GAA8C,UAAnBA,IAI/BT,GAAa,GACbF,EAAO3C,QAAU,IAAIuD,UAAUT,GAC/BH,EAAO3C,QAAQwD,UAAY,SAAA/C,GACzB,IAAMC,EAAUyC,KAAKC,MAAM3C,EAAMgD,MACjCf,GAAY,SAAAgB,GAAI,4BAAQA,GAAR,CAAchD,WAE/B,IAEH,IAAMsB,EAAU,WACdW,EAAO3C,QAAU,IAAIuD,UAAUT,GAEP,KAApBlD,EAAS+D,QAKbhB,EAAO3C,QAAQ4D,OAAS,WACtBf,GAAa,GACbgB,IACAC,EAAclE,GACdmE,QAAQC,IAAI,0IAEZ,IAAMtD,EAAU,CACdC,GAAIsD,IAAQC,WACZzD,MAAO,aACPb,YAGF+C,EAAO3C,QAAQmE,KAAKhB,KAAKiB,UAAU1D,KAGrCiC,EAAO3C,QAAQwD,UAAY,SAAA/C,GACzB,IAAMC,EAAUyC,KAAKC,MAAM3C,EAAMgD,MACjCf,GAAY,SAAAgB,GAAI,4BAAQA,GAAR,CAAchD,QAGhCiC,EAAO3C,QAAQqE,QAAU,WACvBN,QAAQC,IAAI,wHAGdrB,EAAO3C,QAAQsE,QAAU,WACvBP,QAAQC,IAAI,iGA7BZO,IAAMC,MAAM,+HAA4B,CAAEC,MAAO,aAiC/C1D,EAAc,WAClB,GAAqB,KAAjBF,EAAM8C,OAAV,CAIA,IAAMjD,EAAU,CACdC,GAAIsD,IAAQC,WACZzD,MAAO,UACPC,QAASG,EACTjB,YAGF+C,EAAO3C,QAAQmE,KAAKhB,KAAKiB,UAAU1D,IAEnCgE,EAAkBhE,GAClBI,EAAS,MAGL4D,EAAoB,SAAApE,GACxB,IAAM0C,EAAgBC,aAAaC,QAAQ,YAC3C,GAAsB,OAAlBF,EAAJ,CAIA,IAAM2B,EAAgBxB,KAAKC,MAAMJ,GACjC2B,EAAcC,KAAKtE,GACnB2C,aAAa4B,QAAQ,WAAY1B,KAAKiB,UAAUO,SAL9C1B,aAAa4B,QAAQ,WAAY1B,KAAKiB,UAAU,CAAC9D,MAQ/CuD,EAAqB,WAEF,OADAZ,aAAaC,QAAQ,cAE1CD,aAAa4B,QAAQ,YAAa,SAKhCf,EAAgB,SAAAgB,GAEF,OADA7B,aAAaC,QAAQ,SAErCD,aAAa4B,QAAQ,OAAQ1B,KAAKiB,UAAUU,KA4BhD,OACE,sBAAKvF,UAAWC,IAAEuF,cAAlB,WACInC,GACA,cAAC,EAAD,CACEhD,SAAUA,EACVmC,YAAaA,EACbC,QAASA,EACTC,gBA9BgB,SAAAV,GACR,UAAVA,EAAEyD,MACJzD,EAAE0D,iBACFjD,QA+BCY,GACC,sBAAKrD,UAAWC,IAAE0F,KAAlB,UACE,cAAC,EAAD,CAAYvF,SAAUA,EAAUC,SAAUA,IAC1C,cAAC,EAAD,CACEiB,MAAOA,EACPC,SAAUA,EACVC,YAAaA,EACbC,iBAlCe,SAAAO,GACT,UAAVA,EAAEyD,MACJzD,EAAE0D,iBACFlE,QAiCI,cAACoE,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAS1E,GAAG,mBAAZ,4CACT2E,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAH5B,SAKE,cAACC,EAAA,EAAD,CACEnG,UAAWC,IAAEmG,YACb9D,QApCE,WACZoB,aAAa2C,QACb/C,GAAa,GACbd,EAAY,IACZW,EAAY,IACZC,EAAO3C,QAAQwD,UAAY,KAC3Bb,EAAO3C,QAAQ4D,OAAS,MA+Bd,aAAW,wCAKnB,cAAC,IAAD,Q,MChLSiC,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.48f42628.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__jDsTA\",\"closeButton\":\"Chat_closeButton__1vziX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__2EPlp\",\"text\":\"LoginForm_text__3yW0k\",\"input\":\"LoginForm_input__3B7Mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatForm\":\"ChatForm_chatForm__3ys6k\",\"chatInput\":\"ChatForm_chatInput__2yo6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__LyA3g\"};","import s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import './ChatWindow.scss';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nconst ChatWindow = ({ messages, username }) => {\r\n  const chatWindow = useRef();\r\n  useEffect(() => {\r\n    chatWindow.current.scrollTo({\r\n      top: 9999,\r\n      behavior: 'smooth',\r\n    });\r\n  });\r\n\r\n  return (\r\n    <ul className=\"chatWindow\" ref={chatWindow}>\r\n      {messages.map(mess => {\r\n        const messageClassName = mess.username === username ? 'you' : 'user';\r\n        const messagePosition = messageClassName !== 'you' && 'right';\r\n\r\n        return (\r\n          <li className=\"item\" key={mess.id}>\r\n            {mess.event === 'connection' ? (\r\n              <p>Пользователь {mess.username} подключился</p>\r\n            ) : (\r\n              <p className={`${messagePosition}`}>\r\n                {mess.username}:{` `}\r\n                <span className={`${messageClassName}`}>{mess.message}</span>\r\n              </p>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import s from './ChatForm.module.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst ChatForm = ({ value, setValue, sendMessage, sendMessageEnter }) => {\r\n  return (\r\n    <Form className={s.chatForm}>\r\n      <Form.Control\r\n        className={s.chatInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        onKeyPress={sendMessageEnter}\r\n        placeholder=\"Введите сообщение\"\r\n      />\r\n\r\n      <Button variant=\"success\" type=\"button\" onClick={sendMessage}>\r\n        Отправить\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import s from './LoginForm.module.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst LoginForm = ({ username, setUsername, connect, connectEnterKey }) => {\r\n  return (\r\n    <Form className={s.loginForm}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          onKeyPress={connectEnterKey}\r\n          placeholder=\"Введите имя\"\r\n        />\r\n\r\n        <Form.Text className={s.text}>\r\n          Заполните форму для подключения к чату\r\n        </Form.Text>\r\n\r\n        <Button variant=\"success\" type=\"button\" onClick={connect}>\r\n          Войти\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useRef, useState, useEffect } from 'react';\r\nimport s from './Chat.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { toast } from 'react-toastify';\r\nimport { CloseButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport shortid from 'shortid';\r\nimport ChatWindow from '../ChatWindow';\r\nimport ChatForm from '../ChatForm';\r\nimport LoginForm from '../LoginForm';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [value, setValue] = useState('');\r\n  const socket = useRef();\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const { REACT_APP_HOST } = process.env;\r\n\r\n  useEffect(() => {\r\n    const localMessages = localStorage.getItem('messages');\r\n    if (!localMessages) {\r\n      return;\r\n    }\r\n    const message = JSON.parse(localMessages);\r\n    setMessages([...message]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const localName = localStorage.getItem('name');\r\n    if (!localName) {\r\n      return;\r\n    }\r\n    setUsername(JSON.parse(localName));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const localConnected = localStorage.getItem('connected');\r\n    if (localConnected === null || localConnected === 'false') {\r\n      return;\r\n    }\r\n\r\n    setConnected(true);\r\n    socket.current = new WebSocket(REACT_APP_HOST);\r\n    socket.current.onmessage = event => {\r\n      const message = JSON.parse(event.data);\r\n      setMessages(prev => [...prev, message]);\r\n    };\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    socket.current = new WebSocket(REACT_APP_HOST);\r\n\r\n    if (username.trim() === '') {\r\n      toast.error('Пожалуйста, введите имя!', { theme: 'colored' });\r\n      return;\r\n    }\r\n\r\n    socket.current.onopen = () => {\r\n      setConnected(true);\r\n      saveLocalConnected();\r\n      saveLocalName(username);\r\n      console.log('Подключение установлено!');\r\n\r\n      const message = {\r\n        id: shortid.generate(),\r\n        event: 'connection',\r\n        username,\r\n      };\r\n\r\n      socket.current.send(JSON.stringify(message));\r\n    };\r\n\r\n    socket.current.onmessage = event => {\r\n      const message = JSON.parse(event.data);\r\n      setMessages(prev => [...prev, message]);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log('Произошло отключение');\r\n    };\r\n\r\n    socket.current.onerror = () => {\r\n      console.log('Произошла ошибка');\r\n    };\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (value.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const message = {\r\n      id: shortid.generate(),\r\n      event: 'message',\r\n      message: value,\r\n      username,\r\n    };\r\n\r\n    socket.current.send(JSON.stringify(message));\r\n\r\n    saveLocalMessages(message);\r\n    setValue('');\r\n  };\r\n\r\n  const saveLocalMessages = mess => {\r\n    const localMessages = localStorage.getItem('messages');\r\n    if (localMessages === null) {\r\n      localStorage.setItem('messages', JSON.stringify([mess]));\r\n      return;\r\n    }\r\n    const parseMessages = JSON.parse(localMessages);\r\n    parseMessages.push(mess);\r\n    localStorage.setItem('messages', JSON.stringify(parseMessages));\r\n  };\r\n\r\n  const saveLocalConnected = () => {\r\n    const localConnected = localStorage.getItem('connected');\r\n    if (localConnected === null) {\r\n      localStorage.setItem('connected', 'true');\r\n      return;\r\n    }\r\n  };\r\n\r\n  const saveLocalName = name => {\r\n    const localName = localStorage.getItem('name');\r\n    if (localName === null) {\r\n      localStorage.setItem('name', JSON.stringify(name));\r\n      return;\r\n    }\r\n  };\r\n\r\n  const connectEnterKey = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      connect();\r\n    }\r\n  };\r\n\r\n  const sendMessageEnter = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const logOf = () => {\r\n    localStorage.clear();\r\n    setConnected(false);\r\n    setUsername('');\r\n    setMessages([]);\r\n    socket.current.onmessage = null;\r\n    socket.current.onopen = null;\r\n  };\r\n\r\n  return (\r\n    <div className={s.chatContainer}>\r\n      {!connected && (\r\n        <LoginForm\r\n          username={username}\r\n          setUsername={setUsername}\r\n          connect={connect}\r\n          connectEnterKey={connectEnterKey}\r\n        />\r\n      )}\r\n\r\n      {connected && (\r\n        <div className={s.chat}>\r\n          <ChatWindow messages={messages} username={username} />\r\n          <ChatForm\r\n            value={value}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n            sendMessageEnter={sendMessageEnter}\r\n          />\r\n          <OverlayTrigger\r\n            overlay={<Tooltip id=\"tooltip-disabled\">Выход</Tooltip>}\r\n            placement=\"bottom\"\r\n            delay={{ show: 250, hide: 400 }}\r\n          >\r\n            <CloseButton\r\n              className={s.closeButton}\r\n              onClick={logOf}\r\n              aria-label=\"Выход\"\r\n            />\r\n          </OverlayTrigger>\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import Container from '../Container';\nimport Chat from '../Chat';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Container>\n      <Chat />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}